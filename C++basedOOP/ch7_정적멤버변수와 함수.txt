C++에서 class의 멤버변수와 멤버함수를 정적멤버(static member)로 선언하여 사용 가능.
같은 class를 기반으로 생성된 객체들이 특정 멤버변수를 공유하고자 하는 경우나,
객체를 생성하지 않고 멤버함수를 사용하고자 할 때 선언하는 방식

[정적 멤버변수]
    class에서 멤버변수를 정적(static)으로 선언하면, 해당 class를 기반으로 생성된 모든 객체에 공동으로 사용하므로 동일한 데이터만으로 유지 관리됨.
    여러 파일에서 접근가능하게 됨.
    아파트 설계도를 바탕으로 각각의 집을 지었는데 놀이터는 공통적으로 사용하는 개념과 같은 것.

    -정적 멤버변수 팁
        모든 객체가 공유한다: 동일한 calss를 기반으로 생성된 여러 개의 객체가 특정 멤버변수를 메모리에서 공유하고자 할 때 사용.
        객체와 독립적으로 특정 메모리 공간에 고정되어 존재함.
        
        사용법: class내 멤버변수 선언 앞에 static을 붙임.
        공유되는 class 범주를 class밖에 추가로 선언하여야 함.

        예)
        class CMotor
        {
        static int m_nData;
        };
        int CMotor:: m_nData;

    ex. 7_1_staticMemVal1.cpp 참고바람...
    ㄴclass 직접 접근
    ㄴ정적 멤버변수가 저장된 메모리는 오직 하나의 공간을 가리키므로 각각 생성된 객체들이 공유함.

    ex. 7_2_staticMemVal2.cpp 참고바람...
    ㄴ초기화

[정적 멤버함수]
    특정 class를 기반으로 객체를 생성하지 않고, 직접 멤버함수를 호출하고자 할 때 사용함.
    이경우 객체가 생성된 것이 아니므로 class의 멤버변수에 접근이 불가능함.
    이때 class에서선언한 멤버변수에 직접 접근하고자 하면 멤버변수를 정적으로 선언하여야 함.

    -정적 멤버함수 팁
        class 외부에서 객체 생성 없이 class의 특정 멤버함수로 접근하고자 할 때 사용함.
        객체가 추가로 생성된 경우라면 객체 이름으로 호출해도 무방하지만 가급적 class 이름으로 직접호출 권장
        class내 멤버함수 선언 앞에 static을 붙인다.
        예) static void Func(int arg)
        객체가 생성된 것이 아니므로 독립적으로 특정 메모리 주소에 고정되어 존재함.
        정적 멤버함수내에서 class내 멤버변수를 직접 사용할 수 없다.
        정적 멤버함수내에서 class내 정적 멤버변수로 선언하면 사용이 가능함.


        ex. 7_3_staticMemFunc.cpp 참고바람...
        ㄴ정적으로 선언된 함수를 main()에서 객체 생성 없이 직접 호출하여 사용함.
