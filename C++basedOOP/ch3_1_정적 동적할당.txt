[정적 할당(static allocation)]
    프로그램이 실행되기 전, 컴파일 시점에 소스코드를 읽고 메모리 공간을 확보하는 것.
    프로그램이 실행되기 위해서는 메모리가 필요함.

[동적 할당(dynamic allocation)]
    컴파일 타임이 아닌 프로그램이 실행되는 중인 런타임에 필요한 만큼의 메모리 공간을 확보하는 것.

    필요한 이유:    그때그때 필요한 만큼만 메모리 공간을 확보하고, 다 사용했다면 메모리 공간을 해제하여
                    한정된 메모리 공간을 효율적으로 사용할 수 있게 됨.
                    ex. 100000byte 사이즈의 메모리를 할당하고 실제로는 10byte만 사용하면,
                        남은 메모리 공간을 비효율적으로 사용하게 됨
    
    주의:           동적할당은 *힙(heap) 영역에 필요할 때마다 메모리 공간을 할당하고,
                    더이상 필요하지 않을 경우 메모리를 해제해주는 과정을 의미함.
                    함수가 종료되거나 변수의 영역을 벗어나면 자동으로 메모리가 해제되는 스택과는 다름.

                    *힙:    C언어나 자바와 같은 프로그래밍 환경에서 원시 자료형이 아닌
                            보다 큰 크기의 데이터를 담고자 동적으로 할당하는 메모리 공간.
    
    장점:           상황에 따라 원하는 크기 만큼의 메모리가 할당되므로 경제적임
                    이미 할당된 메모리라도 언제든 크기를 조정할 수 있음.
    단점:           메모리를 해제하지 않으면 *메모리 누수가 나타나고 이는 디버깅 하기 매우 까다롭다.

                    *메모리 누수:    동적으로 할당한 메모리가 할당 해제 될 수 없는 상태가 된 것.
                                    메모리 누수가 반복되면 시스템의 메모리가 부족해져 운영체제가
                                    메모리 할당에 실패하여 프로그램을 종료시킴.